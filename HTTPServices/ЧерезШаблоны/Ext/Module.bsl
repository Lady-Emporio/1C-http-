
Функция ОсновнаяСтраницаGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);	
	Пользователь=хСервер.ПолучитьПользователя(Запрос,Ответ);
	Если Пользователь=Неопределено тогда
		Возврат Ответ;
	КонецЕсли;
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Контент=хСервер.КонтентСтраницаСоСпискомИгр();
	Тело=хСервер.ПолучитьСтраницу(Пользователь,Контент);
	Ответ.УстановитьТелоИзСтроки(Тело);
	Возврат Ответ;
КонецФункции

Функция ОсновнаяСтраницаPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Only get requests. "+ Строка(ТекущаяДата()) );
	Возврат Ответ;
КонецФункции

Функция ИграGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Пользователь=хСервер.ПолучитьПользователя(Запрос,Ответ);
	Если Пользователь=Неопределено тогда
		Возврат Ответ;
	КонецЕсли;
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	Ид=Запрос.ПараметрыURL["guid"];
	ОбластьСТаблицей=хСервер.ТаблицаПоИгре(Ид,Пользователь);
	Все=хСервер.ПолучитьСтраницу(Пользователь,ОбластьСТаблицей);
	Ответ.УстановитьТелоИзСтроки(Все);
	Возврат Ответ;
КонецФункции

Функция ИграPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Only get requests. "+ Строка(ТекущаяДата()) );
	Возврат Ответ;
КонецФункции

Функция ajaxGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Only post requests. "+ Строка(ТекущаяДата()) );
	Возврат Ответ;
КонецФункции

Функция ajaxPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Пользователь=НеИспользуетсяхСервер.ПолучитьПользователя(Запрос,Ответ);
	Если Пользователь=Неопределено тогда
		Возврат Ответ;		
	КонецЕсли;
	
	JsonСырой=Запрос.ПолучитьТелоКакСтроку();
	Попытка
		Чтение=Новый ЧтениеJSON();
		Чтение.УстановитьСтроку(JsonСырой);
		Структура=  ПрочитатьJSON(Чтение);
		Чтение.Закрыть();
	Исключение
		Ответ.УстановитьТелоИзСтроки("Error json. "+Строка(ТекущаяДата()));
		Возврат Ответ;	
	КонецПопытки;
	
	ИмяОбработчика=Неопределено;	
	Если НЕ Структура.Свойство("ИмяОбработчика", ИмяОбработчика) тогда
		Ответ.УстановитьТелоИзСтроки("Error json. Not found ИмяОбработчика."+Строка(ТекущаяДата()));
		Возврат Ответ;			
	КонецЕсли;

	Если ИмяОбработчика="pass" тогда
		ОбработчикХода(Пользователь,Структура,Ответ);
	  	Возврат Ответ;	
	КонецЕсли;
	
	
	
		
	Возврат Ответ;
КонецФункции


Процедура ОбработчикХода(Пользователь,Структура,Ответ)
	НомерСтрокиТаблицы=Неопределено;
	НомерКолонкиТаблицы=Неопределено;
	ИдИгры=Неопределено;

	Если НЕ Структура.Свойство("НомерСтрокиТаблицы", НомерСтрокиТаблицы) тогда
		Ответ.УстановитьТелоИзСтроки("Error json. Not found НомерСтрокиТаблицы."+Строка(ТекущаяДата()));
		Возврат;			
	КонецЕсли;
	Если НЕ Структура.Свойство("НомерКолонкиТаблицы", НомерКолонкиТаблицы) тогда
		Ответ.УстановитьТелоИзСтроки("Error json. Not found НомерКолонкиТаблицы."+Строка(ТекущаяДата()));
		Возврат;			
	КонецЕсли;
	Если НЕ Структура.Свойство("ИдИгры", ИдИгры) тогда
		Ответ.УстановитьТелоИзСтроки("Error json. Not found ИдИгры."+Строка(ТекущаяДата()));
		Возврат;			
	КонецЕсли;
	
	Попытка
		ИдИгрыСпр=Справочники.ИнформацияПоИгре.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдИгры));
		НомерСтрокиТаблицы=Число(НомерСтрокиТаблицы);	
		НомерКолонкиТаблицы=Число(НомерКолонкиТаблицы);	
	Исключение
		Ответ.УстановитьТелоИзСтроки("Error json. Неверный формат данных. "+Строка(ТекущаяДата()));
		Возврат;	
	КонецПопытки;

	
	
	
	
	
	
	      	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнформацияПоИгре.Ссылка КАК Ссылка,
		|	ИнформацияПоИгре.Крестик КАК Крестик,
		|	ИнформацияПоИгре.Нолик КАК Нолик
		|ИЗ
		|	Справочник.ИнформацияПоИгре КАК ИнформацияПоИгре
		|ГДЕ
		|	ИнформацияПоИгре.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ИдИгрыСпр);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		Ответ.УстановитьТелоИзСтроки("Error json. error not exist guid."+Строка(ТекущаяДата()));
		Возврат;	
	КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЭтоНолик=Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Пользователь = ВыборкаДетальныеЗаписи.Крестик Тогда
			ЭтоНолик=Ложь;	
		ИначеЕСли Пользователь = ВыборкаДетальныеЗаписи.Нолик тогда
			ЭтоНолик=Истина;
		ИначеЕсли ПустаяСтрока(ВыборкаДетальныеЗаписи.Крестик) тогда
			СправочникОб=ИдИгрыСпр.ПолучитьОбъект();
			СправочникОб.Крестик=Пользователь;
			СправочникОб.Записать();
			ЭтоНолик=Ложь;	
		Иначе
			Ответ.УстановитьТелоИзСтроки("Вы не участвуете в игре. "+Строка(ТекущаяДата()));
			Возврат;			
		КонецЕсли;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Игра.Период КАК Период,
		|	Игра.ИнформацияПоИгре КАК ИнформацияПоИгре,
		|	Игра.Ход КАК Ход,
		|	Игра.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	Игра.НомерКолонкиТаблицы КАК НомерКолонкиТаблицы,
		|	Игра.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.Игра КАК Игра
		|ГДЕ
		|	Игра.НомерСтрокиТаблицы = &НомерСтрокиТаблицы
		|	И Игра.НомерКолонкиТаблицы = &НомерКолонкиТаблицы
		|	И Игра.ИнформацияПоИгре = &ИнформацияПоИгре";
	
	Запрос.УстановитьПараметр("НомерКолонкиТаблицы", НомерКолонкиТаблицы);
	Запрос.УстановитьПараметр("НомерСтрокиТаблицы", НомерСтрокиТаблицы);
	Запрос.УстановитьПараметр("ИнформацияПоИгре", ИдИгрыСпр);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
	   	ЗначениеКлетки=Строка(ВыборкаДетальныеЗаписи.Значение);
	  	Ответ.УстановитьТелоИзСтроки("Клетка уже занята. "+ЗначениеКлетки+Строка(ТекущаяДата()));
		Возврат; 
	КонецЕсли;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ПоследнийРаунд=0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИграСрезПоследних.Значение КАК Значение,
		|	ИграСрезПоследних.Ход КАК Ход
		|ИЗ
		|	РегистрСведений.Игра.СрезПоследних КАК ИграСрезПоследних
		|ГДЕ
		|	ИграСрезПоследних.ИнформацияПоИгре = &ИнформацияПоИгре";
	
	Запрос.УстановитьПараметр("ИнформацияПоИгре", ИдИгрыСпр);
	
	РезультатЗапроса = Запрос.Выполнить();
	                     
	МожноЛиХодить=Ложь;
	СообщениеОПопыткеХода="";
	Если РезультатЗапроса.Пустой()тогда
		МожноЛиХодить=?(ЭтоНолик,Истина,Ложь);
		СообщениеОПопыткеХода="Ходить нельзя. Очередь Нолика";
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		ПоследнийРаунд=ВыборкаДетальныеЗаписи.Ход;
		Если ВыборкаДетальныеЗаписи.Значение=Перечисления.ВариантыХодов.Нолик тогда
			МожноЛиХодить=?(ЭтоНолик,Ложь,Истина);
			СообщениеОПопыткеХода="Ходить нельзя. Очередь кппрестик";
		ИначеЕсли ВыборкаДетальныеЗаписи.Значение=Перечисления.ВариантыХодов.Крестик тогда
			МожноЛиХодить=?(ЭтоНолик,Истина,Ложь);
			СообщениеОПопыткеХода="Ходить нельзя. Очередь нолик";
		Иначе
			СообщениеОПопыткеХода="Произошла ошибка. Игра невозможна";	
		КонецЕсли;
	КонецЕсли;
	
	
	Если МожноЛиХодить тогда	
		Менеджер=РегистрыСведений.Игра.СоздатьМенеджерЗаписи();
		Менеджер.Период=ТекущаяДата();
		Менеджер.ИнформацияПоИгре=ИдИгрыСпр;
		Менеджер.Ход =ПоследнийРаунд+1; 
	    Менеджер.НомерСтрокиТаблицы=НомерСтрокиТаблицы;
		Менеджер.НомерКолонкиТаблицы=НомерКолонкиТаблицы;
		Менеджер.Значение=?(ЭтоНолик,Перечисления.ВариантыХодов.Нолик,Перечисления.ВариантыХодов.Крестик);
		Менеджер.Записать();
		СообщениеОПопыткеХода="Twilight";
		Ответ.УстановитьТелоИзСтроки(СообщениеОПопыткеХода);
		Возврат;//Ключевой ответ.
	КонецЕсли;
	Ответ.УстановитьТелоИзСтроки(СообщениеОПопыткеХода+ Строка(ТекущаяДата()) );

	
КонецПроцедуры

Функция PostGET(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Only get requests. "+ Строка(ТекущаяДата()) );
	Возврат Ответ;
КонецФункции

Функция PostPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	СыроеТело=Запрос.получитьТелоКакстроку();
	СырыеДанные=СтрРазделить(СыроеТело,"&",Ложь);
	ИмяИгры=Неопределено;
	Для каждого ключИЗначЧерезРавно из СырыеДанные цикл
		КлючЗнач=СтрРазделить(ключИЗначЧерезРавно,"=",Ложь);
		Если КлючЗнач.Количество()=2 и КлючЗнач[0]="inamegame" тогда
			ИмяИгры=КлючЗнач[1];				
		КонецЕсли;
	КонецЦикла;
	Если ИмяИгры=Неопределено тогда 
		хСервер.Вернуть404(Ответ);
		Возврат Ответ;
	КонецЕсли;
	Пользователь=НеИспользуетсяхСервер.ПолучитьПользователя(Запрос,Ответ);
	Если Пользователь=Неопределено тогда
		Возврат Ответ;
	КонецЕсли;
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");
	
	Справочник=Справочники.ИнформацияПоИгре.СоздатьЭлемент();
	Справочник.Наименование=ИмяИгры;
	Справочник.Нолик=Пользователь;
	Справочник.Записать();
	ИдНовойИгры=Справочник.Ссылка.УникальныйИдентификатор();
	Ответ.УстановитьТелоИзСтроки("<script type=""text/javascript"">location="""+Константы.БазовыйПутьКСерверу.Получить()+Метаданные.HTTPСервисы.ЧерезШаблоны.КорневойURL+"/game/"+Строка(ИдНовойИгры)+ """</script>");
	Возврат Ответ;

КонецФункции
